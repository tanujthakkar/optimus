<launch> 

  <include file= "$(find gazebo_ros)/launch/empty_world.launch"> 
    <arg name="world_name" value="$(find optimus)/worlds/asphalt.world"/> 
  </include>

  <group ns="optimus_front_namespace">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find optimus_front_down)/urdf/optimus_front_down.urdf.xacro" />
    <param name = "robot_front" value="optimus_front"/> 
    <arg name ="init_pose" value="-x 1.0 -y 0 -z 0.45 -R 0 -P 0 -Y 0"/>

    <!-- Reading control config file -->
    <rosparam file="$(find optimus_front_down)/config/control.yaml" command="load"/>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <!-- <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" /> -->

    <node name="controller_spwaner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="optimus_joint_state_controller optimus_FR_outer_wheel_controller optimus_FR_outer_wheel_connector_controller optimus_FL_outer_wheel_controller optimus_FL_outer_wheel_connector_controller optimus_FR_inner_wheel_controller optimus_FR_inner_wheel_connector_controller optimus_FL_inner_wheel_controller optimus_FL_inner_wheel_connector_controller optimus_R_docker_shaft_controller optimus_L_docker_shaft_controller UR10_shoulder_pan_joint_controller UR10_shoulder_lift_joint_controller UR10_elbow_joint_controller UR10_wrist_1_joint_controller UR10_wrist_2_joint_controller UR10_wrist_3_joint_controller" />

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>

    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="$(arg init_pose) -urdf -model robot_front -param robot_description"/>
  </group>

  <group ns="optimus_rear_namespace">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find optimus_rear_down)/urdf/optimus_rear_down.urdf.xacro" />
    <param name = "robot_rear" value="optimus_rear"/> 

    <!-- Reading control config file -->
    <rosparam file="$(find optimus_rear_down)/config/control.yaml" command="load"/>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <!-- <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" /> -->

    <node name="controller_spwaner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="optimus_joint_state_controller optimus_RR_outer_wheel_controller optimus_RR_outer_wheel_connector_controller optimus_RL_outer_wheel_controller optimus_RL_outer_wheel_connector_controller optimus_RR_inner_wheel_controller optimus_RR_inner_wheel_connector_controller optimus_RL_inner_wheel_controller optimus_RL_inner_wheel_connector_controller UR10_shoulder_pan_joint_controller UR10_shoulder_lift_joint_controller UR10_elbow_joint_controller UR10_wrist_1_joint_controller UR10_wrist_2_joint_controller UR10_wrist_3_joint_controller" />

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>

    <arg name ="init_pose" value="-x -1.0 -y 0 -z 0.45 -R 0 -P 0 -Y 0"/>

    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="$(arg init_pose) -urdf -model robot_rear -param robot_description"/>
  </group>

</launch>